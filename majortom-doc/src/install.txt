== How to Install MajorToM-Server ==

To use MaJorToM-Server, you must have a Tomcat 7 with the manager app (which is delivered with the server) installed.

=== Prepare the tomcat ===

Download the tomcat application and unpack the archive. You can find the current version at
http://tomcat.apache.org/ .

After downloading, specify a user in _TOMCATROOT/conf/tomcat-users.xml_ e.g.

------------------------------------------------------------------------------------
<?xml version='1.0' encoding='utf-8'?>
<tomcat-users>
  <role rolename="manager-gui"/>
  <role rolename="admin-gui"/>
  <user username="username" password="password" roles="manager-gui, admin-gui"/>
</tomcat-users>
------------------------------------------------------------------------------------

This user is able to deploy a web application.

After that start the tomcat server with

------------------------------------------
TOMCATROOT/bin/catalina.sh start
------------------------------------------

Visit http://localhost:8080 and the tomcat start page should be visible.

=== Checking out the Source Code ===

The MaJorToM-Server development team uses mercurial as source control management tool.
Install mercurial as described on their website http://mercurial.selenic.com/ .

Check out the source code with:

------------------------------------------
hg clone https://majortom-server.googlecode.com/hg/ majortom-server 
------------------------------------------

To select a specific version you have to switch to a version branch. The default branch is the current development branch.
Branches beginning with V are version branches, e.g. V1_0_0 .

To switch a branch use the following command

------------------------------------------
hg update VERSION 
------------------------------------------

For a list of all available branches use the command:

------------------------------------------
hg branches 
------------------------------------------

=== Configuring the MaJorToM-Server ===

No matter which way you chose to deploy the MaJorToM-Server, some configuration is necessary prior to deployment.

First, go to _SOURCEROOT/src/main/resources_ and rename the file _server.properties.sample_ to _server.properties_. Open the file with a text editor and modify the values as shown below.

==== Cache configuration ====

The MaJorToM-Server has a built-in caching mechanism that stores the once executed queries and returns the cached values whenever a cached query is executed again.
The default is in-memory caching. To enable caching with a Redis store, you can change the _class_ property to _de.topicmapslab.majortom.server.cache.RedisCache_.

NOTE: You can disable caching if you just leave the _class_ property blank.  

==== Redis configuration ====

When you want to use a Redis store for caching, you must configure the _hostname_ and _storeId_ properties. If your Redis store requires authentification, you must as well configure the password property.

==== Authentification store configuration ====

The MaJorToM-Server needs a place to store the information about usernames and passwords. The default settings make use of an HSQL store. All you have to configure is the _db.jdbcurl_ property which points
to the place of the HSQL file.

NOTE: You may as well use other stores as long as there is a hibernate dialect available. Please read the hibernate documentation for more info. 

=== Installing with Maven ===

Before installing from source, you  will have to install Maven 3.

==== Prepare the deployment ====

Maven provides plugins, which deploy a web application directly into a tomcat instance. To use this feature it is necessary to 
modify the pom.xml of the MaJorToM-Server project. Look for the following entry and add the url to your tomcat instance.

------------------------------------------
	<properties>
		<spring.version>3.0.5.RELEASE</spring.version>
		<tmql.version>3.1.0-SNAPSHOT</tmql.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<server.url>http://localhost:8080</server.url>
	</properties>
------------------------------------------

The login data of the server is stored in the _settings.xml_ of Maven. You can find it at:

-------------
HOME/.m2
-------------

If you don't find it there you might find it at

-------------
HOME/.m2/conf
-------------

If you don't have a _settings.xml_ copy the following, otherwise just add the server part to your file:

--------------------------------
<settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0
                      http://maven.apache.org/xsd/settings-1.0.0.xsd">
  <localRepository/>
  <interactiveMode/>
  <usePluginRegistry/>
  <offline/>
  <pluginGroups/>
  <servers>
	  <server>
	        <id>mt-server</id>
	        <username>username</username>
	        <password>password</password>
	  </server>
  </servers>
  <mirrors/>
  <proxies/>
  <profiles/>
  <activeProfiles/>
</settings>
--------------------------------

After that you can deploy the server with

----------
mvn tomcat:deploy
----------

You will find the admin interface at 

-------------
http://localhost:8080/majortom-server/admin/
-------------

If you deploy to another server than the localhost you need to adapt the host and port.

ATTENTION: You must have the trailing / or the admin page won't be found.


=== Creating and installing a WAR-File ===

If you don't want to deploy the MaJorToM-Server with Maven, you may as well create a traditional WAR-File (e.g. with Eclipse) and deploy it as you deploy any other WAR-File. 
